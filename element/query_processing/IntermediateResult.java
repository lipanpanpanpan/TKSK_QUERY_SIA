package element.query_processing;

import index.Signature;

import java.util.Vector;

/*
 * A light-weight class to generate intermediate result generated by the 
 * intersection of two inverted lists. 
 * 
 */
public class IntermediateResult {

	public Vector<Vector<Integer>> results;
	public int len;
	
	public IntermediateResult()
	{
		int len = Signature.getLen();
		results = new Vector<Vector<Integer>>(len);
		for(int i=0;i < len;i++){
			results.add(i, new Vector<Integer>());
		}
	}
	
	public void addDocID(int docID)
	{
		results.get(docID & 0x3FF).add(docID);
	}
}
